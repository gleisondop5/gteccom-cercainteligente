# Generated by Django 2.0.7 on 2018-07-20 00:27

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Camera',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('tag_slug', models.SlugField(help_text='Mnemônico identificador da câmera. Deve ser único e conter apenas letras, números, sublinhados e hífens', unique=True)),
                ('direction', models.CharField(choices=[('in', 'Sentido da entrada da cidade'), ('out', 'Sentido da saída da cidade'), ('even', 'Sentido par da via'), ('odd', 'Sentido ímpar da via'), ('free', 'Movimento livre (domo)'), ('sidewalk', 'Câmera de calçada')], help_text='Direção para a qual a câmera está apontada', max_length=8)),
                ('model', models.CharField(help_text='Modelo da câmera', max_length=200)),
                ('rtsp_url', models.URLField(help_text='URL do fluxo de vídeo, conforme definido no Real Time Streaming Protocol (RTSP)', unique=True)),
                ('agent_username', models.CharField(help_text='Nome do usuário com acesso à máquina onde o agente é executado', max_length=100)),
                ('agent_password', models.CharField(help_text='Senha do usuário com acesso à máquina onde o agente é executado', max_length=50)),
                ('agent_ip', models.GenericIPAddressField(help_text='Endereço IP da máquina onde o agente é executado')),
            ],
        ),
        migrations.CreateModel(
            name='ControlPoint',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Nome do ponto de controle contém uma ou mais câmeras', max_length=200)),
                ('address', models.CharField(help_text='Endereço de localização do ponto de controle', max_length=200)),
                ('latitude', models.FloatField(help_text='Latitude da localização do ponto de controle')),
                ('longitude', models.FloatField(help_text='Longitude da localização do ponto de controle')),
            ],
        ),
        migrations.CreateModel(
            name='DetectedLicensePlate',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('detection_date', models.DateTimeField(help_text='Data e hora da detecção')),
                ('license_plate', models.CharField(help_text='Placa de carro identificada a partir da(s) imagem(s)', max_length=7)),
                ('data_filename', models.FilePathField(help_text='Nome do arquivo ZIP que contém a(s) imagem(s) utilizada(s) na identificação da placa do carro', match='*.zip')),
                ('data_password', models.CharField(help_text='Senha utilizada na compressão do arquivo ZIP que contém a(s) imagem(s) utilizada(s) na identificação da placa do carro', max_length=8)),
                ('data_md5', models.CharField(help_text='Valor de verificação calculado conforme o algorítimo MD5 sobre o arquivo ZIP que contém a(s) imagen(s) utilizada(s) na identificação da placa do carro', max_length=32)),
                ('camera', models.ForeignKey(help_text='Câmera de origem da(s) imagem(s) registrada(s)', on_delete=django.db.models.deletion.CASCADE, to='monitor.Camera')),
            ],
        ),
        migrations.CreateModel(
            name='Layer',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Nome da camada que contém um ou mais pontos de controle', max_length=200)),
            ],
        ),
        migrations.AddField(
            model_name='controlpoint',
            name='layer',
            field=models.ForeignKey(help_text='Camada a qual o ponto de controle pertence', on_delete=django.db.models.deletion.CASCADE, to='monitor.Layer'),
        ),
        migrations.AddField(
            model_name='camera',
            name='controlpoint',
            field=models.ForeignKey(help_text='Ponto de controle ao qual a câmera pertence', on_delete=django.db.models.deletion.CASCADE, to='monitor.ControlPoint'),
        ),
    ]
